import json
import sys
import os
from datetime import datetime

from .project import rootpath

def print_header(filename, target):
    target.write('# generated by export.py\n')
    target.write('# origin: {}\n'.format(filename))
    target.write('# date: {}\n'.format(datetime.now().isoformat(' ')))

def print_cell(data, target):
    for cell in data['cells']:
        if cell['cell_type'] == 'code' and \
           len(cell['source']) > 1 and \
           cell['source'][0].startswith( '# EXPORT' ):
            for line in cell['source'][1:]:
                target.write(line)
            target.write('\n# {}\n'.format('-'*20))

def generate_export(ipynbfilename):
    dirname  = os.path.dirname(ipynbfilename)
    basename = os.path.basename(ipynbfilename)
    parts = basename.split('.')

    if len(parts)<2 and parts[-1] is not 'ipynb':
        return

    filename = '.'.join(parts[0:-1]) + '.py'
    pyfilename = dirname + '/' + filename if dirname else filename
    with open(ipynbfilename) as f:        
        data = json.load(f)

        target = open(pyfilename, 'w')
        print_header(ipynbfilename, target)
        print_cell(data, target)

def generate_exports(path=None):
    
    if not path:
        path  = rootpath()
    
    if not path:
        path  = '.'
    
    for root, dirs, files in os.walk(path):
        
        # don't visit .ipynb_checkpoints directories
        if '.ipynb_checkpoints' in dirs:
            dirs.remove('.ipynb_checkpoints')  
        
        for file in files:
            if file.endswith(".nbconvert.ipynb"): 
                continue
            
            if file.endswith(".ipynb"):
                filename = os.path.join(root, file)
                generate_export(filename)